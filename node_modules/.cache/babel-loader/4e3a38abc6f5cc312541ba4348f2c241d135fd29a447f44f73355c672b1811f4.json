{"ast":null,"code":"'use strict';\n\nvar as = require('../../lib/as');\nfunction getContentLength(body) {\n  var result;\n  if (Buffer.isBuffer(body)) {\n    // Buffer\n    result = body.length;\n  } else if (typeof body === 'string') {\n    result = Buffer.byteLength(body);\n  }\n  return result;\n}\nfunction prepareProxyReq(container) {\n  return new Promise(function (resolve) {\n    var bodyContent = container.proxy.bodyContent;\n    var reqOpt = container.proxy.reqBuilder;\n    if (bodyContent) {\n      bodyContent = container.options.reqAsBuffer ? as.buffer(bodyContent, container.options) : as.bufferOrString(bodyContent);\n      reqOpt.headers['content-length'] = getContentLength(bodyContent);\n      if (container.options.reqBodyEncoding) {\n        reqOpt.headers['Accept-Charset'] = container.options.reqBodyEncoding;\n      }\n    }\n    container.proxy.bodyContent = bodyContent;\n    resolve(container);\n  });\n}\nmodule.exports = prepareProxyReq;","map":{"version":3,"names":["as","require","getContentLength","body","result","Buffer","isBuffer","length","byteLength","prepareProxyReq","container","Promise","resolve","bodyContent","proxy","reqOpt","reqBuilder","options","reqAsBuffer","buffer","bufferOrString","headers","reqBodyEncoding","module","exports"],"sources":["E:/CLG/Projects/my_portfolio/node_modules/express-http-proxy/app/steps/prepareProxyReq.js"],"sourcesContent":["'use strict';\n\nvar as = require('../../lib/as');\n\nfunction getContentLength(body) {\n\n  var result;\n  if (Buffer.isBuffer(body)) { // Buffer\n    result = body.length;\n  } else if (typeof body === 'string') {\n    result = Buffer.byteLength(body);\n  }\n  return result;\n}\n\n\nfunction prepareProxyReq(container) {\n  return new Promise(function (resolve) {\n    var bodyContent = container.proxy.bodyContent;\n    var reqOpt = container.proxy.reqBuilder;\n\n    if (bodyContent) {\n      bodyContent = container.options.reqAsBuffer ?\n        as.buffer(bodyContent, container.options) :\n        as.bufferOrString(bodyContent);\n\n      reqOpt.headers['content-length'] = getContentLength(bodyContent);\n\n      if (container.options.reqBodyEncoding) {\n        reqOpt.headers['Accept-Charset'] = container.options.reqBodyEncoding;\n      }\n    }\n\n    container.proxy.bodyContent = bodyContent;\n    resolve(container);\n  });\n}\n\nmodule.exports = prepareProxyReq;\n\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,EAAE,GAAGC,OAAO,CAAC,cAAc,CAAC;AAEhC,SAASC,gBAAgBA,CAACC,IAAI,EAAE;EAE9B,IAAIC,MAAM;EACV,IAAIC,MAAM,CAACC,QAAQ,CAACH,IAAI,CAAC,EAAE;IAAE;IAC3BC,MAAM,GAAGD,IAAI,CAACI,MAAM;EACtB,CAAC,MAAM,IAAI,OAAOJ,IAAI,KAAK,QAAQ,EAAE;IACnCC,MAAM,GAAGC,MAAM,CAACG,UAAU,CAACL,IAAI,CAAC;EAClC;EACA,OAAOC,MAAM;AACf;AAGA,SAASK,eAAeA,CAACC,SAAS,EAAE;EAClC,OAAO,IAAIC,OAAO,CAAC,UAAUC,OAAO,EAAE;IACpC,IAAIC,WAAW,GAAGH,SAAS,CAACI,KAAK,CAACD,WAAW;IAC7C,IAAIE,MAAM,GAAGL,SAAS,CAACI,KAAK,CAACE,UAAU;IAEvC,IAAIH,WAAW,EAAE;MACfA,WAAW,GAAGH,SAAS,CAACO,OAAO,CAACC,WAAW,GACzClB,EAAE,CAACmB,MAAM,CAACN,WAAW,EAAEH,SAAS,CAACO,OAAO,CAAC,GACzCjB,EAAE,CAACoB,cAAc,CAACP,WAAW,CAAC;MAEhCE,MAAM,CAACM,OAAO,CAAC,gBAAgB,CAAC,GAAGnB,gBAAgB,CAACW,WAAW,CAAC;MAEhE,IAAIH,SAAS,CAACO,OAAO,CAACK,eAAe,EAAE;QACrCP,MAAM,CAACM,OAAO,CAAC,gBAAgB,CAAC,GAAGX,SAAS,CAACO,OAAO,CAACK,eAAe;MACtE;IACF;IAEAZ,SAAS,CAACI,KAAK,CAACD,WAAW,GAAGA,WAAW;IACzCD,OAAO,CAACF,SAAS,CAAC;EACpB,CAAC,CAAC;AACJ;AAEAa,MAAM,CAACC,OAAO,GAAGf,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}