{"ast":null,"code":"'use strict';\n\nvar chunkLength = require('../../lib/chunkLength');\nfunction sendProxyRequest(Container) {\n  var req = Container.user.req;\n  var bodyContent = Container.proxy.bodyContent;\n  var reqOpt = Container.proxy.reqBuilder;\n  var options = Container.options;\n  return new Promise(function (resolve, reject) {\n    var protocol = Container.proxy.requestModule;\n    var proxyReq = Container.proxy.req = protocol.request(reqOpt, function (rsp) {\n      if (options.stream) {\n        Container.proxy.res = rsp;\n        return resolve(Container);\n      }\n      var chunks = [];\n      rsp.on('data', function (chunk) {\n        chunks.push(chunk);\n      });\n      rsp.on('end', function () {\n        Container.proxy.res = rsp;\n        Container.proxy.resData = Buffer.concat(chunks, chunkLength(chunks));\n        resolve(Container);\n      });\n      rsp.on('error', reject);\n    });\n    proxyReq.on('socket', function (socket) {\n      if (options.timeout) {\n        socket.setTimeout(options.timeout, function () {\n          proxyReq.abort();\n        });\n      }\n    });\n    proxyReq.on('error', reject);\n\n    // this guy should go elsewhere, down the chain\n\n    if (options.parseReqBody) {\n      // We are parsing the body ourselves so we need to write the body content\n      // and then manually end the request.\n\n      //if (bodyContent instanceof Object) {\n      //throw new Error\n      //debugger;\n      //bodyContent = JSON.stringify(bodyContent);\n      //}\n\n      if (bodyContent.length) {\n        var body = bodyContent;\n        var contentType = proxyReq.getHeader('Content-Type');\n        if (contentType === 'x-www-form-urlencoded' || contentType === 'application/x-www-form-urlencoded') {\n          try {\n            var params = JSON.parse(body);\n            body = Object.keys(params).map(function (k) {\n              return k + '=' + params[k];\n            }).join('&');\n          } catch (e) {\n            // bodyContent is not json-format\n          }\n        }\n        proxyReq.setHeader('Content-Length', Buffer.byteLength(body));\n        proxyReq.write(body);\n      }\n      proxyReq.end();\n    } else {\n      // Pipe will call end when it has completely read from the request.\n\n      req.pipe(proxyReq);\n    }\n    req.on('aborted', function () {\n      // reject?\n\n      proxyReq.abort();\n    });\n  });\n}\nmodule.exports = sendProxyRequest;","map":{"version":3,"names":["chunkLength","require","sendProxyRequest","Container","req","user","bodyContent","proxy","reqOpt","reqBuilder","options","Promise","resolve","reject","protocol","requestModule","proxyReq","request","rsp","stream","res","chunks","on","chunk","push","resData","Buffer","concat","socket","timeout","setTimeout","abort","parseReqBody","length","body","contentType","getHeader","params","JSON","parse","Object","keys","map","k","join","e","setHeader","byteLength","write","end","pipe","module","exports"],"sources":["E:/CLG/Projects/my_portfolio/node_modules/express-http-proxy/app/steps/sendProxyRequest.js"],"sourcesContent":["'use strict';\n\nvar chunkLength = require('../../lib/chunkLength');\n\nfunction sendProxyRequest(Container) {\n  var req = Container.user.req;\n  var bodyContent = Container.proxy.bodyContent;\n  var reqOpt = Container.proxy.reqBuilder;\n  var options = Container.options;\n\n  return new Promise(function (resolve, reject) {\n    var protocol = Container.proxy.requestModule;\n    var proxyReq = Container.proxy.req = protocol.request(reqOpt, function (rsp) {\n      if (options.stream) {\n        Container.proxy.res = rsp;\n        return resolve(Container);\n      }\n\n      var chunks = [];\n      rsp.on('data', function (chunk) { chunks.push(chunk); });\n      rsp.on('end', function () {\n        Container.proxy.res = rsp;\n        Container.proxy.resData = Buffer.concat(chunks, chunkLength(chunks));\n        resolve(Container);\n      });\n      rsp.on('error', reject);\n    });\n\n    proxyReq.on('socket', function (socket) {\n      if (options.timeout) {\n        socket.setTimeout(options.timeout, function () {\n          proxyReq.abort();\n        });\n      }\n    });\n\n    proxyReq.on('error', reject);\n\n    // this guy should go elsewhere, down the chain\n\n    if (options.parseReqBody) {\n    // We are parsing the body ourselves so we need to write the body content\n    // and then manually end the request.\n\n      //if (bodyContent instanceof Object) {\n      //throw new Error\n      //debugger;\n      //bodyContent = JSON.stringify(bodyContent);\n      //}\n\n      if (bodyContent.length) {\n        var body = bodyContent;\n        var contentType = proxyReq.getHeader('Content-Type');\n        if (contentType === 'x-www-form-urlencoded' || contentType === 'application/x-www-form-urlencoded') {\n          try {\n            var params = JSON.parse(body);\n            body = Object.keys(params).map(function (k) { return k + '=' + params[k]; }).join('&');\n          } catch (e) {\n            // bodyContent is not json-format\n          }\n        }\n        proxyReq.setHeader('Content-Length', Buffer.byteLength(body));\n        proxyReq.write(body);\n      }\n      proxyReq.end();\n    } else {\n    // Pipe will call end when it has completely read from the request.\n\n      req.pipe(proxyReq);\n    }\n\n    req.on('aborted', function () {\n    // reject?\n\n      proxyReq.abort();\n    });\n  });\n}\n\n\nmodule.exports = sendProxyRequest;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}